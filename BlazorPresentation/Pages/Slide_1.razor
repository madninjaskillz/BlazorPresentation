@page "/"@inject IJSRuntime JS;<div style="width: 99%;        height: 100%;        position: absolute;        top: 0;        left: 0;        right: 0;        bottom: 0;        padding: 20px;">    <h1>@CurrentSlide.Title</h1>    <div style="position: absolute; width: 80vw; height: 80vh; top: 15vh; bottom: 5vh; left: 10vw; right: 10vw; align-content: center; text-align: center;">        @if (CurrentSlide.Images != null)
        {            @foreach (var img in CurrentSlide.Images)
            {<img style="margin: 10px; box-shadow: 0 0 20px rgba(0, 0, 0, 0.5);height: 60vh" src="@img" />            }        }        <p style="        color: white;        margin: 10px;">@CurrentSlide.Body</p>    </div></div><video style="position: absolute; right:0px; bottom:0px;" id="video" width="240" height="160" autoplay></video>@code{ private int slide = 0;    public SlideData CurrentSlide = new SlideData    {        Title = "loading...",        Body = (MarkupString)"please wait",        Images = new List<string>()    };    void Slides_SlideChanged(object sender, EventArgs e)    {        if (BlazorPresentation.Slides.SharedSlide <= BlazorPresentation.Slides.SharedSlides.Count)        {            CurrentSlide = BlazorPresentation.Slides.SharedSlides[BlazorPresentation.Slides.SharedSlide - 1];        }        else        {            CurrentSlide = new SlideData            {                Title = "Thankyou!",                Body = (MarkupString)"",                Images = new List<string>()            };        }        InvokeAsync(() => StateHasChanged());    }    protected override void OnAfterRender(bool firstRender)    {        BlazorPresentation.Slides.SlideChanged += Slides_SlideChanged;        JS.InvokeVoidAsync("startVideo");    }}