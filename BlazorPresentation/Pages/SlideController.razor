@page "/SlideController/{FourCharCode}"
<h3>@ViewingSlide.MassiveTitle</h3>
<h3>@ViewingSlide.Title</h3>
<b>@SelectedPresentation.SharedSlide</b>
<p>@(ViewingSlide.Script)</p>
<div style="position: absolute; width: 40vw; height: 40px;bottom: 10vh; left:20px; background: #808080; text-align:center; align-content: center;" @onclick="@Last">Previous</div>
<div style="        position: absolute;
        width: 40vw;
        height: 40px;
        bottom: 10vh;
        right: 20px;
        background: #808080;
        text-align: center;
        align-content: center;
" @onclick="@Next">Next</div>
@code {

    private string fourCharCode;
    [ParameterAttribute]
    public string FourCharCode
    {
        get => fourCharCode;
        set
        {
            fourCharCode = value;

            if (Slides.Presentations.ContainsKey(fourCharCode))
            {
                SelectedPresentation = Slides.Presentations[fourCharCode];

                ViewingSlide = SelectedPresentation.Slides[Math.Max(SelectedPresentation.SharedSlide - 1,0)];
                SelectedPresentation.SlideChanged += Slides_SlideChanged;
            }
        }
    }

    public Presentation SelectedPresentation = null;

    private BlazorPresentation.SlideData currentSlide = new BlazorPresentation.SlideData
    {
        Title = "loading...",
        Body = (Microsoft.AspNetCore.Components.MarkupString)"please wait",
        Images = new List<string>()
    };

    public void Next()
    {
        SelectedPresentation.SharedSlide++;
    }

    public void Last()
    {
        SelectedPresentation.SharedSlide--;
    }

    public BlazorPresentation.SlideData ViewingSlide
    {
        get => currentSlide;
        set => currentSlide = value;
    }

    void Slides_SlideChanged(object sender, EventArgs e)
    {
        if (SelectedPresentation.SharedSlide <= SelectedPresentation.Slides.Count)
        {
            ViewingSlide = SelectedPresentation.Slides[Math.Max(SelectedPresentation.SharedSlide - 1,0)];
        }
        else
        {
            ViewingSlide = new SlideData
            {
                Title = "Thankyou!",
                Body = (MarkupString)"",
                Images = new List<string>(),
                Script = (MarkupString)"Thanks"
            };
        }
        InvokeAsync(() => StateHasChanged());
    }

    protected override void OnAfterRender(bool firstRender)
    {
        //BlazorPresentation.Slides.SlideChanged += Slides_SlideChanged;
    }
}
